/* карточки для гистограмм у тебя уже есть (.bar-card) */
.mini-legend{
  display:flex; gap:14px; justify-content:center; align-items:center;
  color:#bdbdbd; font:12px/1 sans-serif; margin: 2px 0 8px;
}
.sw{ width:10px; height:10px; border-radius:999px; display:inline-block; margin-right:6px; }
.sw-a{ background:#00d26a; }   /* Серия 1 */
.sw-b{ background:#ffd400; }   /* Серия 2 */

.bar-track{ fill:#333; }       /* фон дорожки */
.barA-fill{ fill:#00d26a; }    /* верхняя полоса */
.barB-fill{ fill:#ffd400; }    /* нижняя полоса */
.bar-label{
  fill:#bdbdbd; font:12px/1 sans-serif;
  text-anchor:end; dominant-baseline:middle;
}
.bar-value{
  fill:#e6e6e6; font:12px/1 sans-serif;
  dominant-baseline:middle;
}
<div class="bar-card">
  <div class="mini-title">Гистограмма — Котлы</div>
  <div class="mini-legend"><span class="sw sw-a"></span>Серия 1 <span class="sw sw-b"></span>Серия 2</div>
  <svg id="bars-left" class="mini-svg"></svg>
</div>

<div class="bar-card">
  <div class="mini-title">Гистограмма — Турбины</div>
  <div class="mini-legend"><span class="sw sw-a"></span>Серия 1 <span class="sw sw-b"></span>Серия 2</div>
  <svg id="bars-right" class="mini-svg"></svg>
</div>
<script>
  // ===== Константные данные (две серии на показатель) =====
  const LEFT_BARS2 = [
    { label: 'Показатель A', a: 72, b: 61 },
    { label: 'Показатель B', a: 45, b: 58 },
    { label: 'Показатель C', a: 88, b: 80 },
    { label: 'Показатель D', a: 31, b: 44 },
    { label: 'Показатель E', a: 64, b: 69 },
    { label: 'Показатель F', a: 53, b: 49 },
  ];
  const RIGHT_BARS2 = [
    { label: 'Показатель A', a: 25, b: 39 },
    { label: 'Показатель B', a: 90, b: 83 },
    { label: 'Показатель C', a: 61, b: 66 },
    { label: 'Показатель D', a: 77, b: 72 },
    { label: 'Показатель E', a: 34, b: 41 },
    { label: 'Показатель F', a: 55, b: 50 },
  ];

  // ===== Рендер двойной горизонтальной гистограммы =====
  // rows: [{label, a(0..100), b(0..100)}]
  function drawDualBars(svgId, rows, opts={}){
    const svg = d3.select('#'+svgId);
    svg.selectAll('*').remove();

    const barH = opts.barHeight ?? 22;   // общая высота дорожки
    const gap  = opts.gap ?? 10;
    const padL = opts.leftPad ?? 100;    // место под подписи слева
    const padR = opts.rightPad ?? 56;    // место под числа справа
    const padT = 8, padB = 12;

    const W = 320;                       // viewBox — SVG сам адаптивный
    const innerW = W - padL - padR;
    const H = padT + rows.length*(barH+gap) - gap + padB;

    svg.attr('viewBox', `0 0 ${W} ${H}`);

    const x = d3.scaleLinear().domain([0,100]).range([0, innerW]);

    const g = svg.append('g').attr('transform', `translate(${padL},${padT})`);

    rows.forEach((d, i)=>{
      const y = i*(barH+gap);

      // фон (единый трек)
      g.append('rect')
        .attr('class','bar-track')
        .attr('x',0).attr('y',y)
        .attr('width', innerW).attr('height', barH)
        .attr('rx', barH/2).attr('ry', barH/2);

      // верхняя полоса — Серия 1
      const half = (barH/2)-2;
      g.append('rect')
        .attr('class','barA-fill')
        .attr('x',0).attr('y',y + 1)
        .attr('width', x(Math.max(0, Math.min(100, d.a))))
        .attr('height', half)
        .attr('rx', half).attr('ry', half);

      // нижняя полоса — Серия 2
      g.append('rect')
        .attr('class','barB-fill')
        .attr('x',0).attr('y',y + barH - 1 - half)
        .attr('width', x(Math.max(0, Math.min(100, d.b))))
        .attr('height', half)
        .attr('rx', half).attr('ry', half);
    });

    // подписи показателей слева
    const labels = svg.append('g').attr('transform', `translate(${padL-8},${padT})`);
    labels.selectAll('text').data(rows).enter().append('text')
      .attr('class','bar-label')
      .attr('x',0)
      .attr('y', (_,i)=> i*(barH+gap) + barH/2 + .5)
      .text(d=>d.label);

    // значения справа "a% / b%"
    const vals = svg.append('g').attr('transform', `translate(${padL + innerW + 6},${padT})`);
    vals.selectAll('text').data(rows).enter().append('text')
      .attr('class','bar-value')
      .attr('x',0)
      .attr('y', (_,i)=> i*(barH+gap) + barH/2 + .5)
      .attr('text-anchor','start')
      .text(d=> `${Math.round(d.a)}% / ${Math.round(d.b)}%`);
  }

  // ===== рендерим две независимые карточки-гистограммы =====
  drawDualBars('bars-left',  LEFT_BARS2);
  drawDualBars('bars-right', RIGHT_BARS2);
</script>
