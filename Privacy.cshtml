<style>
  /* можно подправить толщину дуги здесь */
  .gauge-track { stroke: #3a3a3a; stroke-width: 22; fill: none; }
  .gauge-progress { stroke-width: 22; fill: none; stroke-linecap: round; }
  .gauge-value { font: 700 32px sans-serif; fill: #fff; text-anchor: middle; }
  .gauge-unit  { font: 14px sans-serif; fill: #bdbdbd; text-anchor: middle; }
</style>

<script>
  function drawGauge(svgId, value){
    const svg = d3.select('#'+svgId);
    svg.selectAll('*').remove();

    // Геометрия
    const W = 360, H = 220;
    const cx = W/2;
    const r  = 100;                 // радиус дуги
    const cy = r + 40;              // центр по Y, чтобы вся дуга попала в viewBox
    svg.attr('viewBox', `0 0 ${W} ${H}`);

    // Углы полуокружности (верхняя половина)
    const start = -Math.PI;         // слева
    const end   = 0;                // справа

    // Одна и та же траектория для трека и прогресса
    const arcPath = d3.arc()
      .innerRadius(r).outerRadius(r)
      .startAngle(start).endAngle(end);

    const g = svg.append('g').attr('transform', `translate(${cx},${cy})`);

    // Градиент для прогресса (красный -> жёлтый -> зелёный) по всей дуге
    const defs = svg.append('defs');
    const gradId = `grad-${svgId}`;
    const grad = defs.append('linearGradient')
      .attr('id', gradId)
      .attr('gradientUnits', 'userSpaceOnUse')
      .attr('x1', cx - r).attr('y1', cy)
      .attr('x2', cx + r).attr('y2', cy);
    grad.append('stop').attr('offset', '0%')  .attr('stop-color', '#ff2d2d');
    grad.append('stop').attr('offset', '50%') .attr('stop-color', '#ffd400');
    grad.append('stop').attr('offset', '100%').attr('stop-color', '#00d26a');

    // Фон (тонкая серая дуга)
    const track = g.append('path')
      .attr('d', arcPath)
      .attr('class', 'gauge-track');

    // Прогресс — та же дуга, но с dasharray
    const progress = g.append('path')
      .attr('d', arcPath)
      .attr('class', 'gauge-progress')
      .attr('stroke', `url(#${gradId})`);

    // ВАЖНО: используем длину пути для равномерного заполнения всей дуги
    const totalLen = progress.node().getTotalLength();
    const clamped = Math.max(0, Math.min(100, value));
    const filled  = totalLen * (clamped / 100);

    progress
      .attr('stroke-dasharray', `${filled},${totalLen - filled}`)
      .attr('stroke-dashoffset', 0);

    // Значение в центре
    svg.append('text')
      .attr('class', 'gauge-value')
      .attr('x', cx)
      .attr('y', cy - 8)
      .text(Math.round(clamped));

    svg.append('text')
      .attr('class', 'gauge-unit')
      .attr('x', cx)
      .attr('y', cy + 18)
      .text('%');
  }

  // Пример:
  drawGauge('gauge-1', 70);
  drawGauge('gauge-2', 85);
</script>
